# purpose: to quickly back up a script version into ~/archive via git

# The point of it is to use as a quick backup for if I am working on something
# outside a repository and I want to make sure I don't lose it.
# bs stands for "backup script" I swear.

VERSION=1.0.4
PROG=`basename $0`
USAGE_FIRST_LINE="Usage: $PROG FILE"

errout() {
    cat <<EOF_errout >&2
$PROG: $*
$USAGE_FIRST_LINE
Try '$PROG --help' for more information.
EOF_errout

    exit 1
}

usage() {

    cat <<EOF_usage >&2
$USAGE_FIRST_LINE
quickly back up a script version into ~/archive via git
Example: $PROG menu.h

  -h, --help                display this help text and exit
  -V, --version             display version information and exit
EOF_usage

}

version() {
   echo "$PROG $VERSION" >&2
}

OPTS=`getopt -o Vh -l 'version,help' -- "$@"`
if [ $? != 0 ]; then
    usage
    exit 1
fi

eval set -- "$OPTS"

while [ $# -gt 0 ]
do
    case "$1" in
      -h | --help) usage
                   exit
                   ;;
   -V | --version) version
                   exit
                   ;;
               --) shift
                   break
                   ;;
                *) errout "Invalid option: $1"
                   ;;
    esac
    shift
done

FILE=$1
if [ ! -f $FILE ]; then
    errout "File \"$FILE\" not found."
fi

DIR=`dirname $FILE`
BASE=`basename $FILE`
HERE=`pwd`
cd $DIR
FDIR=`pwd`
cd $HERE
FULL=`echo "$FDIR/$BASE" | sed -e 's?/?%?g'`

mkdir ~/archive 2>/dev/null
cp $FILE ~/archive/$FULL
cd ~/archive
git init >/dev/null 2>&1
git add $FULL
git commit -m "archived"
git push origin master 2>/dev/null

